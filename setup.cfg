[bumpversion]
current_version = 0.1.0
commit = True
tag = True

[bumpversion:file:setup.py]
search = version='{current_version}'
replace = version='{new_version}'

[bumpversion:file:scarlett_os/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'

[wheel]
universal = 1

[bdist_wheel]
universal = 1

[flake8]
exclude = docs
max-line-length = 200
ignore = E302,E401,E501,E265,E713,E402,D204,D102,D400,D205,E402,D202,D103,D209,D105,D101,D401,D200,E127,D100

[tool:pytest]
timeout = 60
testpaths = tests
norecursedirs = .git testing_config
addopts =  --cov=scarlett_os --cov-report term-missing
####################################################################################
# source: https://github.com/pytest-dev/pytest-mock
# Python 3 users might want to use a newest version of the mock package as 
# published on PyPI than the one that comes with the Python distribution.
# This will force the plugin to import mock instead of the unittest.mock 
# module bundled with Python 3.3+. Note that this option is only used in 
# Python 3+, as Python 2 users only have the option to use the mock package from PyPI anyway.
mock_use_standalone_module = False
# FOLLOW UP INFO. It's possible that we want to be using unittest.mock instead of 
# mock available from pypi which seems to have regressions
# via: https://github.com/pytest-dev/pytest-mock/blob/9d221d5bc53dd0cfddbe775a1595f72d029b9ece/CHANGELOG.rst
# New configuration variable, mock_use_standalone_module (defaults to False). 
# This forces the plugin to import mock instead of unittest.mock on Python 3. 
# This is useful to import a newer version than the one available in the Python distribution.
#
# Previously the plugin would first try to import mock and fallback to unittest.mock 
# in case of an ImportError, but this behavior has been removed because it could 
# hide hard to debug import errors (#68).
# 
# Now mock (Python 2) and unittest.mock (Python 3) are lazy-loaded to make it 
# possible to implement the new mock_use_standlone_module configuration option. 
# As a consequence of this the undocumented pytest_mock.mock_module variable, 
# which pointed to the actual mock module being used by the plugin, has been removed.
#
# DEFAULT is now available from the mocker fixture.
####################################################################################

[isort]
# https://github.com/timothycrosley/isort
# https://github.com/timothycrosley/isort/wiki/isort-Settings
# splits long import on multiple lines indented by 4 spaces
multi_line_output = 4
indent = "    "
# by default isort don't check module indexes
not_skip = __init__.py
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
# typing is stdlib on py35 but 3rd party on py34, let it hang in between
known_inbetweens = typing
sections = FUTURE,STDLIB,INBETWEENS,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
