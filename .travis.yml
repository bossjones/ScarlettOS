matrix:
  fast_finish: true
  include:
  - python: '3.5'
    env: TOXENV=typing PYTHON="python3" PACKAGES="python3-gi python3-gi-cairo"
    sudo: required
    dist: trusty
    language: python
    group: edge
  - python: '3.5'
    env: TOXENV=py35 PYTHON="python3" PACKAGES="python3-gi python3-gi-cairo"
    sudo: required
    dist: trusty
    language: python
    group: edge
  allow_failures:
  - python: '3.5'
    env: TOXENV=typing

cache:
  apt: true
  directories:
  - "$HOME/.cache/pip"
  - "$HOME/virtualenv/python3.5.2/lib/python3.5/site-packages"
  - "$HOME/.ccache"

before_install:
- export SKIP_ON_TRAVIS=yes
- export CURRENT_DIR=$(pwd)
- export GSTREAMER=1.0
- export ENABLE_PYTHON2=yes
- export ENABLE_PYTHON3=yes
- export ENABLE_GTK=yes
- export PYTHON_VERSION_MAJOR=3
- export PYTHON_VERSION=3.5
- export CFLAGS="-fPIC -O0 -ggdb -fno-inline -fno-omit-frame-pointer"
- export MAKEFLAGS="-j4"
- export PREFIX="${HOME}/jhbuild"
- export JHBUILD="${HOME}/gnome"
- export PATH=${PREFIX}/bin:${PREFIX}/sbin:${PATH}
- export LD_LIBRARY_PATH=${PREFIX}/lib:${LD_LIBRARY_PATH}
- export PYTHONPATH=${PREFIX}/lib/python${PYTHON_VERSION}/site-packages:/usr/lib/python${PYTHON_VERSION}/site-packages
- export PKG_CONFIG_PATH=${PREFIX}/lib/pkgconfig:${PREFIX}/share/pkgconfig:/usr/lib/pkgconfig
- export XDG_DATA_DIRS=${PREFIX}/share:/usr/share
- export XDG_CONFIG_DIRS=${PREFIX}/etc/xdg
- export PYTHON="python3"
- export PACKAGES="python3-gi python3-gi-cairo"
- export CC=gcc
- if [ '$GSTREAMER' = '1.0'   ]; then sudo add-apt-repository -y ppa:ricotz/testing;
  fi
- if [ '$GSTREAMER' = '1.0'   ]; then sudo add-apt-repository -y ppa:gnome3-team/gnome3;
  fi
- if [ '$GSTREAMER' = '1.0'   ]; then sudo add-apt-repository -y ppa:gnome3-team/gnome3-staging;
  fi
- sudo add-apt-repository -y ppa:pitti/systemd-semaphore
- travis_retry sudo apt-get update -qq
- travis_retry sudo apt-get update -qq
- travis_retry sudo apt-get install -y libz-dev libbz2-dev gstreamer$GSTREAMER-tools libgstreamer$GSTREAMER-dev
  libgstreamer-plugins-base$GSTREAMER-dev libgstreamer-plugins-bad$GSTREAMER-dev
- if [ '$GSTREAMER' = '1.0'   ]; then travis_retry sudo apt-get install -y libgstreamer-plugins-good$GSTREAMER-dev;
  fi
- travis_retry sudo apt-get update -qq
- travis_retry sudo apt-get install -y gir1.2-gst-plugins-base-1.0 gir1.2-gstreamer-1.0 graphviz-dev
  gstreamer1.0-plugins-good gstreamer1.0-plugins-bad python-gst-1.0
- travis_retry sudo apt-get install -qq python3-gi
- travis_retry sudo apt-get install -qq python-gst-1.0 gstreamer1.0-plugins-base gstreamer1.0-plugins-bad
  gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-libav libsndfile1-dev
  libasound2-dev libgstreamer-plugins-base1.0-dev python-numpy python-scipy
- travis_retry sudo apt-get -y install automake gir1.2-gst-plugins-base-1.0 gir1.2-gstreamer-1.0
  gstreamer1.0-libav gstreamer1.0-plugins-bad gstreamer1.0-plugins-base gstreamer1.0-plugins-good
  gstreamer1.0-plugins-ugly gstreamer1.0-tools libasound2-dev libgstreamer-plugins-base1.0-dev
  libsndfile1-dev python python-dev python-gi python-gst-1.0 python-gst-1.0 python-imaging
  python-lxml python-numpy python-scipy python-virtualenv python3-gi
- travis_retry sudo apt-get -y install libsdl2-dev libsdl2-ttf-dev libsdl2-image-dev libsdl2-mixer-dev
  gnome-common;
- travis_retry sudo apt-get -y install libgstreamer1.0-dev gstreamer1.0-alsa gstreamer1.0-plugins-base;
- travis_retry sudo apt-get -y install python-dev libsmpeg-dev libswscale-dev libavformat-dev libavcodec-dev
  libjpeg-dev libtiff4-dev libX11-dev libmtdev-dev;
- travis_retry sudo apt-get -y install python-setuptools build-essential libgl1-mesa-dev libgles2-mesa-dev;
- travis_retry sudo apt-get -y install xvfb pulseaudio;
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository 'deb http://us.archive.ubuntu.com/ubuntu/
  trusty main restricted universe multiverse'; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository 'deb http://us.archive.ubuntu.com/ubuntu/
  trusty-updates main restricted universe multiverse'; fi
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then travis_retry sudo apt-get update -qq; travis_retry sudo apt-get install
  -qq pkg-config; fi
- travis_retry sudo apt-get -y update
- travis_retry sudo apt-get -y install ubuntu-restricted-extras
- travis_retry sudo apt-get -y install libfftw3-dev
- travis_retry sudo apt-get install -qq python3-dev python3-cairo-dev python3-gi gnome-common gtk-doc-tools
  libgtk-3-dev libgirepository1.0-dev libmount-dev cvs;
- travis_retry sudo apt-get update -q
- travis_retry sudo apt-get install --no-install-recommends -y xvfb gir1.2-gtk-3.0 $(echo $PACKAGES)
- travis_retry sudo apt-get install -qq build-essential git
- travis_retry sudo apt-get install -qq gettext xsltproc docbook-xml docbook-xsl
- travis_retry sudo apt-get install -qq bison docbook-xsl build-essential git-core python-libxml2
  byacc flex apt-file autopoint
- travis_retry sudo apt-get install gcc automake autoconf libtool bison swig python-dev libpulse-dev -y
- travis_retry sudo apt-get install -qq apt-file
- sudo apt-file update
- travis_retry sudo apt-get install wget -qq
- pip install virtualenv virtualenvwrapper
- sudo pip install --upgrade virtualenvwrapper
- export VIRTUALENV_WRAPPER_SH=`which virtualenvwrapper.sh`
- export VIRTUALENVWRAPPER_PYTHON=`which python3`
- export VIRTUALENVWRAPPER_VIRTUALENV=`which virtualenv`
- pip install -I path.py==7.7.1
- export WORKON_HOME=${HOME}/.virtualenvs
- export PROJECT_HOME=${HOME}/dev
- export VIRTUALENVWRAPPER_PYTHON=`which python3`
- export VIRTUALENVWRAPPER_VIRTUALENV=`which virtualenv`
- env
- travis_retry source $VIRTUALENV_WRAPPER_SH
- export PYTHONSTARTUP=$HOME/.pythonrc
- export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache
- mkdir -p $WORKON_HOME
- mkvirtualenv scarlett_os
- bash ./ci/set_postactivate.sh
- workon scarlett_os
- pip install -U coveralls sphinx numpy ipython
- bash ./ci/travis.sh
- jhbuild run pip install -r requirements.txt
- jhbuild run pip install -r requirements_dev.txt
- jhbuild run python3 setup.py install

install:
- travis_retry sudo apt-get update -q
- travis_retry sudo apt-get install --no-install-recommends -y xvfb gir1.2-gtk-3.0 $(echo $PACKAGES)

script: jhbuild run python3 setup.py test

after_success: coveralls

deploy:
  distributions: sdist bdist_wheel
  provider: pypi
  user: bossjones
  password:
    secure: RTwOAJzBeEXy1as+a3sutcSjNTfoSg15ep8tHIjOqK0etkThWXNFs0FvWNuChV3zsFhA40sMpAamHvcGXJ717GAYIPstIrgAusLKM7OIUXpUF6kqvZsRQw9RPS4vBmueBoBo+pLY6q9gIP+Bav+fFwWocSyjwHLGcaOVdOF/m2VbWEg3p+SGwVolguSpWBNobLDmwj8yd/qiZ6b2LvTrOVkUENfa8Zk8BSXerZiTe98I2c/KuGqkVird+3LulK0kDU1FENO9v5eh+wZzElgbVSGfy87gkdc5whYIz4oA794Gc0jt+YiP2k0pNPRGAcrAn5MRjCdvWQtmkbxdns/JZOeK59SrhcQ6BRfDNQC97MPEZAz/E3qhiDPxwbhuK+LsdIiRHnazwv4MuUU27TcqwtTWcYijzT0aifiQUW6hLwpmVMx6GJy8dvhh+Ursr52jaAaFVx31NUB96+Wa204LCZV1CFo8vKgqDxTjZBfEK0zepQUh06dRdMJaeAN/dhsupMjnEfVY5GSv+ySKkJJ2r77mngyVO3snMs6x2sdH+PjfMnOEmQUcpnaNCQF01RxxfUz+7TY0JonM4yb7dnc+T402G+PhEDKGi5/O1YCIHwWQcMxhv2rMiYSlUt3ikcxkW8YGhhRvEUX1rGyAtPWBanyJ+KMb3QWv7huKE7Ezc/E=
  on:
    condition: "$TOXENV == py27"
    repo: bossjones/scarlett_os
    tags: true

notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: arS7e7IDG80ukrrjy4fVfNDh5Yqrz4mxmduWqJU2zHzwxL0QkJWnhncWBpTgXr06MVgWYwq/YnoCGZ+wcWHkYzsqDHWtFI0JguZuJcFAWV5l7PWOxcUUh731hipRcgkZIH03pqnfZTbN3kkNTvFcTL9NG92ZOYd/ZSQeCnNPF9T2PUjn5LnPNwOxJSVAdmvz7CoLJWIR6vF9ojoxZdMj1RhV4b1C9orP3pBh3V3sVc5ExX6cUePXJtkvb51fXwdCsGNA22xZrDfbxCoOXfMmgDuN/7W/DVPPyaZCInYQl2B/oLF+3TOqUZ8STM3BPDIBjxgPRBdULIqeaQJNNJ9rfQ6h+YhvCWDmZD5ugdTQkGCSX2hR4TGMnS9v/nu5KKSalQEkNOfcqZUSTRVHKL800arEwja2avRGu9KBlijg79r/k2EILb7sPfleeS0+eLKIYTBVyQvuiqo31NcZ4Yun9ykQlTJW0n1NiVrLRVHbCIScrHwyH8pI4ts6PbwtUO8HWWDXEUSZRipc14ckZBzqB6ozAAwtF4fStnHC5rkd1sRreZalLKsZxaVpsX0mspZfSLfz6eV34vnDs9Xv0+tPuW0X0P1/FZIykvjDrmoM8s5TD1xzES9zRslhWxK2yv0a5OaryWvicQKcCwg8zwdiCTAwq1wBNkYzrtTnTN9QnRA=
