# This file was autogenerated and will overwrite each time you run travis_pypi_setup.py
# source: https://github.com/Mousers/mousetrap-3.17/blob/c184167da0b6f03d75e9ba197ce80aa15bc72ad5/bin/ci-install-deps.bash
before_install:
  ########################################
  #  jhbuild travis START
  ########################################
  - export SKIP_ON_TRAVIS=yes
  - export CURRENT_DIR=$(pwd)
  - export GSTREAMER=1.0
  - export ENABLE_PYTHON2=yes
  - export ENABLE_PYTHON3=yes
  - export ENABLE_GTK=yes
  - export PYTHON_VERSION=3.5
  # from jhbuild
  - export CFLAGS="-fPIC -O0 -ggdb -fno-inline -fno-omit-frame-pointer"
  - export MAKEFLAGS="-j4"
  - export PREFIX="${HOME}/jhbuild"
  - export JHBUILD="${HOME}/gnome"
  # NOTE: taken from: jhbuild-session
  - export PATH=${PREFIX}/bin:${PREFIX}/sbin:${PATH}
  - export LD_LIBRARY_PATH=${PREFIX}/lib:${LD_LIBRARY_PATH}
  - export PYTHONPATH=${PREFIX}/lib/python${PYTHON_VERSION}/site-packages:/usr/lib/python${PYTHON_VERSION}/site-packages
  - export PKG_CONFIG_PATH=${PREFIX}/lib/pkgconfig:${PREFIX}/share/pkgconfig:/usr/lib/pkgconfig
  - export XDG_DATA_DIRS=${PREFIX}/share:/usr/share
  - export XDG_CONFIG_DIRS=${PREFIX}/etc/xdg
  - export PYTHON="python3"
  - export PACKAGES="python3-gi python3-gi-cairo"
  - export CC=gcc

  - if [ '$GSTREAMER' = '1.0'   ]; then sudo add-apt-repository -y ppa:ricotz/testing; fi
  - if [ '$GSTREAMER' = '1.0'   ]; then sudo add-apt-repository -y ppa:gnome3-team/gnome3; fi
  - if [ '$GSTREAMER' = '1.0'   ]; then sudo add-apt-repository -y ppa:gnome3-team/gnome3-staging; fi
  - sudo add-apt-repository -y ppa:pitti/systemd-semaphore
  - sudo apt-get update -qq
  - sudo apt-get update -qq
  - sudo apt-get install -y libz-dev libbz2-dev gstreamer$GSTREAMER-tools libgstreamer$GSTREAMER-dev libgstreamer-plugins-base$GSTREAMER-dev libgstreamer-plugins-bad$GSTREAMER-dev
  - if [ '$GSTREAMER' = '1.0'   ]; then sudo apt-get install -y libgstreamer-plugins-good$GSTREAMER-dev; fi
  - sudo apt-get update -qq
  - sudo apt-get install -y gir1.2-gst-plugins-base-1.0 gir1.2-gstreamer-1.0 graphviz-dev gstreamer1.0-plugins-good gstreamer1.0-plugins-bad python-gst-1.0
  - sudo apt-get install -qq python3-gi
  - sudo apt-get install -qq python-gst-1.0 gstreamer1.0-plugins-base gstreamer1.0-plugins-bad gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-libav libsndfile1-dev libasound2-dev libgstreamer-plugins-base1.0-dev python-numpy python-scipy
  - sudo apt-get -y install automake gir1.2-gst-plugins-base-1.0 gir1.2-gstreamer-1.0 gstreamer1.0-libav gstreamer1.0-plugins-bad gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-tools libasound2-dev libgstreamer-plugins-base1.0-dev libsndfile1-dev python python-dev python-gi python-gst-1.0 python-gst-1.0 python-imaging python-lxml python-numpy python-scipy python-virtualenv python3-gi
  - sudo apt-get -y install libsdl2-dev libsdl2-ttf-dev libsdl2-image-dev libsdl2-mixer-dev gnome-common;
  - sudo apt-get -y install libgstreamer1.0-dev gstreamer1.0-alsa gstreamer1.0-plugins-base;
  - sudo apt-get -y install python-dev libsmpeg-dev libswscale-dev libavformat-dev libavcodec-dev libjpeg-dev libtiff4-dev libX11-dev libmtdev-dev;
  - sudo apt-get -y install python-setuptools build-essential libgl1-mesa-dev libgles2-mesa-dev;
  - sudo apt-get -y install xvfb pulseaudio;
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository 'deb http://us.archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse'; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository 'deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe multiverse'; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update -qq; sudo apt-get install -qq pkg-config; fi
  - sudo apt-get -y update
  - sudo apt-get -y install ubuntu-restricted-extras
  - sudo apt-get -y install libfftw3-dev
  - sudo apt-get install -qq python3-dev;
  - sudo apt-get install -qq python3-cairo-dev;
  - sudo apt-get install -qq python3-gi;
  - sudo apt-get install -qq gnome-common
  - sudo apt-get install -qq gtk-doc-tools
  - sudo apt-get install -qq libgtk-3-dev
  - sudo apt-get install -qq libgirepository1.0-dev
  - sudo apt-get install -qq libmount-dev
  - sudo apt-get install -qq cvs
  - sudo apt-get update -q
  - sudo apt-get install --no-install-recommends -y xvfb gir1.2-gtk-3.0 $(echo $PACKAGES)
  - sudo apt-get install -qq build-essential
  - sudo apt-get install -qq git
  - sudo apt-get install -qq gettext xsltproc docbook-xml docbook-xsl
  - sudo apt-get install -qq apt-file autopoint
  # install yacc / lex
  - sudo apt-get install -qq byacc flex
  - sudo apt-get install -qq bison
  - sudo apt-get install -qq docbook-xsl build-essential git-core python-libxml2
  - sudo apt-get install -qq apt-file
  - sudo apt-file update
  - sudo apt-get install wget -qq

  # curl -s -q -L 'https://bootstrap.pypa.io/ez_setup.py' > ${HOME}/ez_setup.py
  # curl -s -q -L 'https://bootstrap.pypa.io/get-pip.py' > ${HOME}/get-pip.py
  # sudo python3 ${HOME}/ez_setup.py
  # sudo python3 ${HOME}/get-pip.py
  - sudo pip install virtualenv virtualenvwrapper
  - sudo pip install -I path.py==7.7.1

  # virtualenv
  - export WORKON_HOME=${HOME}/.virtualenvs
  - export PROJECT_HOME=${HOME}/dev
  - export VIRTUALENVWRAPPER_PYTHON=`which python3`
  - export VIRTUALENVWRAPPER_VIRTUALENV=`which virtualenv`
  - source /usr/local/bin/virtualenvwrapper.sh
  - export PYTHONSTARTUP=$HOME/.pythonrc
  - export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache
  - mkdir -p $WORKON_HOME
  - mkvirtualenv scarlett_os
  - bash ./ci/set_postactivate.sh
  - workon scarlett_os
  - bash ./ci/travis.sh
  - jhbuild run python3 setup.py install
  - jhbuild run pip install -U coveralls sphinx numpy ipython
  # mkdir -p $HOME/dev/bossjones-github/
  # git clone https://github.com/bossjones/scarlett_os $HOME/dev/bossjones-github/scarlett_os
  # cd $HOME/dev/bossjones-github/scarlett_os
  # jhbuild run python3 setup.py install
  # jhbuild run pip3 install -U coveralls sphinx numpy ipython
  # jhbuild run python3 setup.py test

  ########################################
  #  jhbuild travis START
  ########################################

  ##### - export MAIN_DIR=$(pwd)
  ##### # - sudo apt-get update
  ##### # - sudo apt-get install -qq python-gi gir1.2-gtk-3.0 ibus gir1.2-appindicator3-0.1 gir1.2-notify-0.7 gir1.2-glib-2.0
  ##### # # - export VIRT_ROOT=/home/travis/virtualenv/python$TRAVIS_PYTHON_VERSION
  ##### # - export PKG_CONFIG_PATH=$VIRT_ROOT/lib/pkgconfig
  ##### # - export SCARLETT_CONFIG=$MAIN_DIR/tests/fixtures/.scarlett
  ##### # - export SCARLETT_HMM=$MAIN_DIR/tests/fixtures/model/hmm/en_US/hub4wsj_sc_8k
  ##### # - export SCARLETT_LM=$MAIN_DIR/tests/fixtures/lm/1602.lm
  ##### # - export SCARLETT_DICT=$MAIN_DIR/tests/fixtures/dict/1602.dic
  ##### # - export PYTHONIOENCODING=UTF8
  ##### - export GSTREAMER=1.0
  ##### - export ENABLE_PYTHON3=yes
  ##### # from jhbuild
  ##### - export CFLAGS="-fPIC -O0 -ggdb -fno-inline -fno-omit-frame-pointer"
  ##### # JHBuild detects too many cores
  ##### - export MAKEFLAGS="-j4"
  ##### # JHBuild related variables
  ##### - export PREFIX="${HOME}/jhbuild"
  ##### - export JHBUILD="${HOME}/gnome"

  ##### # NOTE: taken from: jhbuild-session
  ##### - export PATH=${PREFIX}/bin:${PREFIX}/sbin:${PATH}
  ##### - export LD_LIBRARY_PATH=${PREFIX}/lib:${LD_LIBRARY_PATH}
  ##### - export PYTHONPATH=${PREFIX}/lib/python3.5/site-packages:/usr/lib/python3.5/site-packages
  ##### - export PKG_CONFIG_PATH=${PREFIX}/lib/pkgconfig:${PREFIX}/share/pkgconfig:/usr/lib/pkgconfig
  ##### - export XDG_DATA_DIRS=${PREFIX}/share:/usr/share
  ##### - export XDG_CONFIG_DIRS=${PREFIX}/etc/xdg

  ##### # - export CFLAGS="-fPIC -O0 -ggdb -fno-inline -fno-omit-frame-pointer"
  ##### # - export MAKEFLAGS="-j4"
  ##### # - export PYTHON_VERSION=$(python -c "import sys; print('%s.%s' % sys.version_info[:2])")
  ##### # - export PYTHON_INC_DIR=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")
  ##### # - export PYTHON_SITE_PACKAGES=$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
  ##### # - ls -lta $PKG_CONFIG_PATH
  ##### # - ls -lta $VIRT_ROOT
  ##### # - ls -lta $MAIN_DIR
  ##### - sh -c "if [ '$GSTREAMER' = '1.0'   ]; then sudo add-apt-repository -y ppa:ricotz/testing; fi"
  ##### - sh -c "if [ '$GSTREAMER' = '1.0'   ]; then sudo add-apt-repository -y ppa:gnome3-team/gnome3; fi"
  ##### - sh -c "if [ '$GSTREAMER' = '1.0'   ]; then sudo add-apt-repository -y ppa:gnome3-team/gnome3-staging; fi"
  ##### - sudo apt-get update -qq
  ##### - sudo apt-get install -y libz-dev libbz2-dev gstreamer$GSTREAMER-tools libgstreamer$GSTREAMER-dev libgstreamer-plugins-base$GSTREAMER-dev libgstreamer-plugins-bad$GSTREAMER-dev
  ##### - sh -c "if [ '$GSTREAMER' = '1.0'   ]; then sudo apt-get install -y libgstreamer-plugins-good$GSTREAMER-dev; fi"
  ##### - "sudo apt-get update -qq"
  ##### - "sudo apt-get install -y gir1.2-gst-plugins-base-1.0 gir1.2-gstreamer-1.0 graphviz-dev gstreamer1.0-plugins-good gstreamer1.0-plugins-bad python-gst-1.0"
  ##### - "sudo apt-get install -qq python3-gi"
  ##### - "sudo apt-get install -qq python-gst-1.0 gstreamer1.0-plugins-base gstreamer1.0-plugins-bad gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-libav libsndfile1-dev libasound2-dev libgstreamer-plugins-base1.0-dev python-numpy python-scipy"
  ##### # source: https://github.com/ErinMorelli/em-media-handler/blob/6fbb1188ba6ebffa0b20cc1a255f37828325ee87/.travis.yml
  ##### # DBUS fixes for ABC
  ##### # - sudo apt-get install -y dbus* -qq
  ##### # - export DISPLAY=:0
  ##### # - eval $(dbus-launch --sh-syntax)
  ##### # - export DBUS_SESSION_BUS_ADDRESS
  ##### # - export DBUS_SESSION_BUS_PID
  ##### - sudo apt-get -y install automake gir1.2-gst-plugins-base-1.0 gir1.2-gstreamer-1.0 gstreamer1.0-libav gstreamer1.0-plugins-bad gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-tools libasound2-dev libgstreamer-plugins-base1.0-dev libsndfile1-dev python python-dev python-gi python-gst-1.0 python-gst-1.0 python-imaging python-lxml python-numpy python-scipy python-virtualenv python3-gi
  ##### - sudo apt-get -y install libsdl2-dev libsdl2-ttf-dev libsdl2-image-dev libsdl2-mixer-dev gnome-common;
  ##### - sudo apt-get -y install libgstreamer1.0-dev gstreamer1.0-alsa gstreamer1.0-plugins-base;
  ##### - sudo apt-get -y install python-dev libsmpeg-dev libswscale-dev libavformat-dev libavcodec-dev libjpeg-dev libtiff4-dev libX11-dev libmtdev-dev;
  ##### - sudo apt-get -y install python-setuptools build-essential libgl1-mesa-dev libgles2-mesa-dev;
  ##### - sudo apt-get -y install xvfb pulseaudio;
  ##### - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository 'deb http://us.archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse'; fi
  ##### - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo add-apt-repository 'deb http://us.archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe multiverse'; fi
  ##### - if [ "$TRAVIS_OS_NAME" = "linux" ]; then sudo apt-get update -qq; sudo apt-get install -qq pkg-config; fi
  ##### - sudo apt-get -y update
  ##### - sudo apt-get -y install ubuntu-restricted-extras
  ##### - sudo apt-get -y install libfftw3-dev
  ##### - sudo apt-get install -qq python3-dev;
  ##### - sudo apt-get install -qq python3-cairo-dev;
  ##### - sudo apt-get install -qq python3-gi;
  ##### - sudo apt-get install -qq gnome-common
  ##### - sudo apt-get install -qq gtk-doc-tools
  ##### - sudo apt-get install -qq libgtk-3-dev
  ##### - sudo apt-get install -qq libgirepository1.0-dev
  ##### - sudo apt-get install -qq libmount-dev
  ##### - sudo apt-get install -qq cvs
  -

  #
  # - export PYGI_LOCATION=$(dpkg-query -L python3-gi | grep "packages/gi$")
  # - echo $PYTHON_VERSION
  # - echo $PYTHON_INC_DIR
  # - echo $PYTHON_SITE_PACKAGES
  # - echo $PYGI_LOCATION
  # - ln -s $PYGI_LOCATION "${PYTHON_SITE_PACKAGES}/gi"
  # - file ${PYTHON_SITE_PACKAGES}/gi
  # - ls -lta ${PYTHON_SITE_PACKAGES}
  # - ls -lta ${PYTHON_SITE_PACKAGES}/gi

deploy:
  distributions: sdist bdist_wheel
  provider: pypi
  user: bossjones
  password:
    secure: !!binary |
      UlR3T0FKekJlRVh5MWFzK2Ezc3V0Y1NqTlRmb1NnMTVlcDh0SElqT3FLMGV0a1RoV1hORnMwRnZX
      TnVDaFYzenNGaEE0MHNNcEFhbUh2Y0dYSjcxN0dBWUlQc3RJcmdBdXNMS003T0lVWHBVRjZrcXZa
      c1JRdzlSUFM0dkJtdWVCb0JvK3BMWTZxOWdJUCtCYXYrZkZ3V29jU3lqd0hMR2NhT1ZkT0YvbTJW
      YldFZzNwK1NHd1ZvbGd1U3BXQk5vYkxEbXdqOHlkL3FpWjZiMkx2VHJPVmtVRU5mYThaazhCU1hl
      clppVGU5OEkyYy9LdUdxa1ZpcmQrM0x1bEswa0RVMUZFTk85djVlaCt3WnpFbGdiVlNHZnk4N2dr
      ZGM1d2hZSXo0b0E3OTRHYzBqdCtZaVAyazBwTlBSR0FjckFuNU1SakNkdldRdG1rYnhkbnMvSlpP
      ZUs1OVNyaGNRNkJSZkROUUM5N01QRVpBei9FM3FoaURQeHdiaHVLK0xzZElpUkhuYXp3djRNdVVV
      MjdUY3F3dFRXY1lpanpUMGFpZmlRVVc2aEx3cG1WTXg2R0p5OGR2aGgrVXJzcjUyamFBYUZWeDMx
      TlVCOTYrV2EyMDRMQ1pWMUNGbzh2S2dxRHhUalpCZkVLMHplcFFVaDA2ZFJkTUphZUFOL2Roc3Vw
      TWpuRWZWWTVHU3YreVNLa0pKMnI3N21uZ3lWTzNzbk1zNngyc2RIK1BqZk1uT0VtUVVjcG5hTkNR
      RjAxUnh4ZlV6KzdUWTBKb25NNHliN2RuYytUNDAyRytQaEVES0dpNS9PMVlDSUh3V1FjTXhodjJy
      TWlZU2xVdDNpa2N4a1c4WUdoaFJ2RVVYMXJHeUF0UFdCYW55SitLTWIzUVd2N2h1S0U3RXpjL0U9
  true:
    condition: $TOXENV == py27
    repo: bossjones/scarlett_os
    tags: true
# env:
# - TOXENV=py35
# - TOXENV=pypy
# install: pip install -U tox
# language: python
# python: 3.5
# script: tox -e ${TOXENV}

# sudo: false
# source: http://pygobject.readthedocs.io/en/latest/testing.html
matrix:
  fast_finish: true
  include:
    - python: "3.5"
      env: TOXENV=typing PYTHON="python3" PACKAGES="python3-gi python3-gi-cairo"
      sudo: required
      dist: trusty
      language: python
      group: edge
    - python: "3.5"
      env: TOXENV=py35 PYTHON="python3" PACKAGES="python3-gi python3-gi-cairo"
      sudo: required
      dist: trusty
      language: python
      group: edge
    - python: "pypy"
      env: TOXENV=pypy PYTHON="python3" PACKAGES="python3-gi python3-gi-cairo"
      sudo: required
      dist: trusty
      language: python
      group: edge
  allow_failures:
    - python: "3.5"
      env: TOXENV=typing
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/virtualenv/python3.5.0/lib/python3.5/site-packages
install:
  - sudo apt-get update -q
  - sudo apt-get install --no-install-recommends -y xvfb gir1.2-gtk-3.0 $(echo $PACKAGES)
  # - virtualenv --python=$PYTHON --system-site-packages _venv
  # - source _venv/bin/activate
  # - export MAIN_DIR=$(pwd)
  # - export VIRT_ROOT=/home/travis/virtualenv/python$TRAVIS_PYTHON_VERSION
  # - ls -lta /home/travis/virtualenv/
  # - ls -lta /home/travis/virtualenv/python$TRAVIS_PYTHON_VERSION
  # # - export WORKON_HOME=/home/travis/virtualenv
  # - export PKG_CONFIG_PATH=$VIRT_ROOT/lib/pkgconfig
  # # - export SCARLETT_CONFIG=$MAIN_DIR/tests/fixtures/.scarlett
  # # # - export SCARLETT_HMM=$MAIN_DIR/tests/fixtures/model/hmm/en_US/hub4wsj_sc_8k
  # # - export SCARLETT_LM=$MAIN_DIR/tests/fixtures/lm/1602.lm
  # # - export SCARLETT_DICT=$MAIN_DIR/tests/fixtures/dict/1602.dic
  # - export PYTHONIOENCODING=UTF8
  # - export GSTREAMER=1.0
  # - export PYTHON_VERSION=$(python -c "import sys; print('%s.%s' % sys.version_info[:2])")
  # - export PYTHON_INC_DIR=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")
  # - export PYTHON_SITE_PACKAGES=$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
  # - env
  # # - export LD_LIBRARY_PATH="${VIRT_ROOT}/lib"
  # # - export GST_PLUGIN_PATH="${VIRT_ROOT}/lib/gstreamer-${GSTREAMER}"
  # # # pip 8.1.2 from /home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages
  # # - export PYTHON=$VIRT_ROOT
  # # - ls -lta $PKG_CONFIG_PATH
  # # - ls -lta $VIRT_ROOT
  # # - ls -lta $MAIN_DIR
  # - export PYGI_LOCATION=$(dpkg-query -L python3-gi | grep "packages/gi$")
  # - echo $PYTHON_VERSION
  # - echo $PYTHON_INC_DIR
  # - echo $PYTHON_SITE_PACKAGES
  # - echo $PYGI_LOCATION
  # - bash $MAIN_DIR/gtk3-venv.sh
  # - bash $MAIN_DIR/ci/travis_source.sh
  # - bash $MAIN_DIR/ci/travis_bootstrap.sh
  # - bash $MAIN_DIR/ci/travis.sh
  #
  # - cd $MAIN_DIR
  # - curl -L https://cairographics.org/releases/pycairo-1.10.0.tar.bz2 | tar xj
  # - cd pycairo-1.10.0
  # - export ARCHFLAGS='-arch x86_64'
  # - set -x; python3 ./waf configure --prefix=$VIRT_ROOT
  # - sed -i '154s/data={}/return/' .waf3-1.6.4-*/waflib/Build.py
  # - set -e; python3 ./waf configure --prefix=$VIRT_ROOT
  # - python3 ./waf build
  # - python3 ./waf install
  # - unset ARCHFLAGS
  # - cd $MAIN_DIR
  ###########################################
  # pygobject3
  ###########################################
  # # - export PKG_CONFIG_PATH=$VIRT_ROOT/lib/pkgconfig:/usr/local/opt/libffi/lib/pkgconfig
  # - cd $MAIN_DIR
  # - curl -L http://ftp.gnome.org/pub/GNOME/sources/pygobject/3.20/pygobject-3.20.1.tar.xz | tar xJ
  # - cd pygobject-3.20.1
  # - ./configure CFLAGS="-I$VIRT_ROOT/include" --prefix=$VIRT_ROOT
  # - make
  # - make install
  # - cd $MAIN_DIR
  # - mkdir -p $VIRT_ROOT/lib/python3.5/dist-packages/
  # - cd $VIRT_ROOT/lib/python3.5/dist-packages/
  # - ln -s $PYGI_LOCATION "${PYTHON_SITE_PACKAGES}/gi"
  # - ln -s ${PYGI_LOCATION}/gi gi
  # - file ${PYTHON_SITE_PACKAGES}/gi
  # - ls -lta ${PYTHON_SITE_PACKAGES}
  # - ls -lta ${PYTHON_SITE_PACKAGES}/gi
  # - jhbuild run python3 setup.py install
  # # - pip install -U tox coveralls sphinx numpy
  # - pip install -U coveralls sphinx numpy
  - env
  # - pip install ruamel.venvgtk
script: env; jhbuild run python3 setup.py test
after_success: coveralls
