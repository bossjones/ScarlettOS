{
  // INFO: Good default settings config - https://github.com/DonJayamanne/vscode-setup/blob/master/settings.json
  // Render all the whitespaces
  "editor.renderWhitespace": "all",
  // Controls how lines should wrap. Can be:
  //  - 'off' (disable wrapping),
  //  - 'on' (viewport wrapping),
  //  - 'wordWrapColumn' (wrap at `editor.wordWrapColumn`) or
  //  - 'bounded' (wrap at minimum of viewport and `editor.wordWrapColumn`).
  "editor.wordWrap": "on",
  "workbench.iconTheme": "material-icon-theme",
  "window.zoomLevel": 0,
  "files.insertFinalNewline": true,
  "files.exclude": {
    "out": false,
    "*./DS_Store": true,
    "**/__pycache__": true,
    "**/.a": true,
    "**/.class": true,
    "**/.db": true,
    "**/.dds": true,
    "**/.dll": true,
    "**/.DS_Store": true,
    "**/.dyli": true,
    "**/.eot": true,
    "**/.exe": true,
    "**/.git": true,
    "**/.hg": true,
    "**/.ico": true,
    "**/.idb": true,
    "**/.jar": true,
    "**/.lib": true,
    "**/.ncb": true,
    "**/.o": true,
    "**/.obj": true,
    "**/.pdb": true,
    "**/.psd": true,
    "**/.pyc": true,
    "**/.pyo": true,
    "**/.sdf": true,
    "**/.so": true,
    "**/.suo": true,
    "**/.svn": true,
    "**/.swf": true,
    "**/.tar": true,
    "**/.tga": true,
    "**/.ttf": true,
    "**/.zip": true,
    "**/*.pyc": true,
    "**/DS_STORE": true,
    "**/.iml": true,
    "__pycache__/": true,
    "*.py[cod]": true,
    "*$py.class": true,
    "*.so": true,
    ".Python": true,
    "env/": true,
    "build/": true,
    "develop-eggs/": true,
    "dist/": true,
    "downloads/": true,
    "eggs/": true,
    ".eggs/": true,
    "lib/": true,
    "lib64/": true,
    "parts/": true,
    "sdist/": true,
    "var/": true,
    "*.egg-info/": true,
    ".installed.cfg": true,
    "*.egg": true,
    "*.manifest": true,
    "*.spec": true,
    "pip-log.txt": true,
    "pip-delete-this-directory.txt": true,
    "htmlcov/": true,
    ".tox/": true,
    ".coverage": true,
    ".coverage.*": true,
    ".cache": true,
    "nosetests.xml": true,
    "coverage.xml": true,
    "*,cover": true,
    ".hypothesis/": true,
    "cov.xml": true,
    "*.mo": true,
    "*.pot": true,
    "*.log": true,
    "docs/_build/": true,
    "target/": true,
    ".bundle/": true,
    ".vendor/": true,
    "Gemfile.lock": true,
    "pycairo*": true,
    "pygobject*": true,
    "*gst-plugins-espeak-*": true,
    "espeak-1.48.04-source.zip": true,
    "pa_stable_v19_20140130.tgz": true,
    "pa.tgz": true,
    "portaudio": true,
    "ess.zip": true,
    "espeak-1.48.04-source": true,
    "pocketsphinx": true,
    "sphinxbase": true,
    ".DS_Store": true,
    "*.DS_Store": true,
    "*.DS_Store*": true,
    "listener.py.diff": true,
    "*.sublime-workspace": true,
    ".sublime-workspace": true,
    "_debug/": true,
    "espeak_tmp.wav": true,
    ".vscode/tags": true,
    "src/": true,
    "wheelhouse": true,
    "cov_annotate": true,
    "htmlcov": true,
    "gir-1.0": true,
    "gir-1.0/*": true,
    "fakegir/": true
  },
  "files.trimTrailingWhitespace": true,
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/.vscode/tags": true,
    "**/.vendor": true,
    "**/build": true
  },
  // Exclude types of warnings, for example ["SC1090"].
  "shellcheck.exclude": [
    "2086"
  ],
  "python.pythonPath": "~/.virtualenvs/scarlett-os-venv2/bin/python3",
  "python.formatting.provider": "autopep8",

  // Turn off formatting on type
  "editor.formatOnType": false,

  "python.linting.pylintArgs": [
    "--rcfile",
    "${workspaceFolder}/pylintrc"
  ],
  "python.linting.ignorePatterns": [
    ".vscode/*.py",
    "**/site-packages/**/*.py"
  ],
  "python.venvPath": "~/.virtualenvs",
  "python.sortImports.path": "~/.virtualenvs/scarlett-os-venv2/bin/isort",
  "python.autoComplete.extraPaths": [
    // "~/.cache/fakegir/",
    "~/.virtualenvs/scarlett-os-venv2/lib/python3.5/site-packages"
  ],
  "terminal.integrated.shellArgs.osx": [
    "-l"
  ],
  "terminal.integrated.shellArgs.linux": [
    "-l"
  ],
  // The path of the shell that the terminal uses on Linux.
  "terminal.integrated.shell.linux": "/usr/local/bin/bash",
  // Path to the shellcheck executable.
  "shellcheck.executablePath": "/usr/local/bin/shellcheck",
  // Controls whether locale variables are set at startup of the terminal, this defaults to true on OS X, false on other platforms.
  "terminal.integrated.setLocaleVariables": true,
  // The path of the shell that the terminal uses on OS X.
  "terminal.integrated.shell.osx": "/usr/local/bin/bash",
  // Glob patterns that defines the files to search for. Only include files you need, DO NOT USE `{**/*.*}` for both permormance and avoiding binary files reason.
  "todohighlight.keywords": [
    {
      "text": "TODO:",
      "color": "#fff",
      "backgroundColor": "#ffbd2a",
      "overviewRulerColor": "rgba(255,189,42,0.8)"
    },
    {
      "text": "FIXME:",
      "color": "#fff",
      "backgroundColor": "#f06292",
      "overviewRulerColor": "rgba(240,98,146,0.8)"
    },
    {
      "text": "BOSSJONES:",
      "color": "#fff",
      "backgroundColor": "green"
    },
    {
      "text": "DEBUG:",
      "color": "#fff",
      "backgroundColor": "blue"
    },
    {
      "text": "REVIEW:",
      "color": "#fff",
      "backgroundColor": "yellow"
    },
    {
      "text": "INFO:",
      "color": "#fff",
      "backgroundColor": "violet"
    },
    {
      "text": "NOTE:",
      "color": "#fff",
      "backgroundColor": "grey"
    },
    {
      "text": "EXAMPLE:",
      "color": "#fff",
      "backgroundColor": "teal"
    },
    {
      "text": "SOURCE:",
      "color": "#fff",
      "backgroundColor": "maroon"
    }
  ],

  // The number of spaces a tab is equal to. This setting is overridden based on the file contents when `editor.detectIndentation` is on.
  "editor.tabSize": 4,

  // Insert spaces when pressing Tab. This setting is overridden based on the file contents when `editor.detectIndentation` is on.
  "editor.insertSpaces": true,

  // When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.
  "editor.detectIndentation": true,

  "todohighlight.toggleURI": false,
  "todohighlight.exclude": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/dist/**",
    "**/build/**",
    "**/.vscode/**",
    "**/.github/**",
    "**/_output/**",
    "**/*.min.*",
    "**/*.map",
    "**/.vscode/settings.json",
    "**/.next/**"
  ],
  "todohighlight.maxFilesForSearch": 5120,
  // Specifies whether or not to enable GitLens telemetry (even if enabled still abides   by the overall `telemetry.enableTelemetry` setting
  "gitlens.advanced.telemetry.enabled": false,
  "todohighlight.include": [
    "**/*.js",
    "**/*.jsx",
    "**/*.ts",
    "**/*.tsx",
    "**/*.html",
    "**/*.php",
    "**/*.css",
    "**/*.scss",
    "**/*.mk",
    "**/Makefile",
    "**/*.go"
  ],
  "files.associations": {
    "Vagrantfile": "ruby",
    "bashrc": "shellscript",
    "pythonrc": "python",
    "bashrc_ansible": "shellscript",
    "01-init-ssh": "shellscript",
    "00-init-env": "shellscript",
    "30-init-dbus": "shellscript",
    "bash_profile": "shellscript",
    "50-init-dgoss": "shellscript",
    ".pi_setuid_shm": "shellscript",
    "99-pytest": "shellscript",
    "run": "shellscript",
    "finish": "shellscript",
    "execline-startup": "shellscript",
    "execline-shell": "shellscript",
    "50-init-gtk3-deps": "shellscript",
    "init": "shellscript",
    "with-contenv": "shellscript",
    "with-retries": "shellscript",
    "printcontenv": "shellscript",
    "logutil-service-main": "shellscript",
    "logutil-service": "shellscript",
    "40-init-gtk3-deps": "shellscript",
    "98-prepare-ci": "shellscript",
    "50-init-goss-jhbuild": "shellscript",
    "fix-attrs": "shellscript",
    "logutil-newfifo": "shellscript",
    "with-dynenv": "shellscript"
  },
  "telemetry.enableTelemetry": false,
  "telemetry.enableCrashReporter": false,
  "vsicons.dontShowNewVersionMessage": true,
  "workbench.colorTheme": "Atom One Dark",
  "material-icon-theme.showUpdateMessage": false,
  "cmake.buildDirectory": "${workspaceFolder}/build",
  "cmake.sourceDirectory": "${workspaceFolder}",
  "restructuredtext.builtDocumentationPath": "${workspaceFolder}/_build/html",
  "restructuredtext.confPath": "${workspaceFolder}",
  "restructuredtext.linter.executablePath": "/usr/local/bin/restructuredtext-lint",
  "restructuredtext.sphinxBuildPath": "/usr/local/bin/sphinx-build",
  "restructuredtext.workspaceRoot": "${workspaceFolder}",
  "python.linting.enabled": true
}
