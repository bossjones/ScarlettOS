#!/usr/bin/execlineb -PW

# with-contenv

# multisubstitute
# {
#     importas ADDRESS_FILE ADDRESS_FILE
#     importas BUILD_DATE BUILD_DATE
#     importas CC CC
#     importas CCACHE_DIR CCACHE_DIR
#     importas CFLAGS CFLAGS
#     importas CONTAINER_VERSION CONTAINER_VERSION
#     importas CURRENT_DIR CURRENT_DIR
#     importas DBUS_SESSION_BUS_ADDRESS DBUS_SESSION_BUS_ADDRESS
#     importas DEBIAN_FRONTEND DEBIAN_FRONTEND
#     importas ENABLE_GTK ENABLE_GTK
#     importas ENABLE_PYTHON3 ENABLE_PYTHON3
#     importas GID GID
#     importas GIT_BRANCH GIT_BRANCH
#     importas GIT_SHA GIT_SHA
#     importas GITHUB_BRANCH GITHUB_BRANCH
#     importas GITHUB_REPO_NAME GITHUB_REPO_NAME
#     importas GITHUB_REPO_ORG GITHUB_REPO_ORG
#     importas GOSS_VERSION GOSS_VERSION
#     importas GST_PLUGIN_PATH GST_PLUGIN_PATH
#     importas GSTREAMER GSTREAMER
#     importas HOME HOME
#     importas JHBUILD JHBUILD
#     importas LANG LANG
#     importas LANGUAGE_ID LANGUAGE_ID
#     importas LC_ALL LC_ALL
#     importas LD_LIBRARY_PATH LD_LIBRARY_PATH
#     importas LESSCLOSE LESSCLOSE
#     importas LESSOPEN LESSOPEN
#     importas LS_COLORS LS_COLORS
#     importas MAIN_DIR MAIN_DIR
#     importas MAKEFLAGS MAKEFLAGS
#     importas NOT_ROOT_USER NOT_ROOT_USER
#     importas NOTVISIBLE NOTVISIBLE
#     importas PACKAGES PACKAGES
#     importas PATH PATH
#     importas PATH_TO_DOT_VIRTUALENV PATH_TO_DOT_VIRTUALENV
#     importas PI_HOME PI_HOME
#     importas PID PID
#     importas PID_FILE PID_FILE
#     importas PIP_DOWNLOAD_CACHE PIP_DOWNLOAD_CACHE
#     importas PKG_CONFIG_PATH PKG_CONFIG_PATH
#     importas PREFIX PREFIX
#     importas PROJECT_HOME PROJECT_HOME
#     importas PWD PWD
#     importas PYTHON PYTHON
#     importas PYTHON_PIP_VERSION PYTHON_PIP_VERSION
#     importas PYTHON_VERSION PYTHON_VERSION
#     importas PYTHON_VERSION_MAJOR PYTHON_VERSION_MAJOR
#     importas PYTHONPATH PYTHONPATH
#     importas PYTHONSTARTUP PYTHONSTARTUP
#     importas PYTHONUNBUFFERED PYTHONUNBUFFERED
#     importas S6_BEHAVIOUR_IF_STAGE2_FAILS S6_BEHAVIOUR_IF_STAGE2_FAILS
#     importas S6_KILL_FINISH_MAXTIME S6_KILL_FINISH_MAXTIME
#     importas S6_KILL_GRACETIME S6_KILL_GRACETIME
#     importas S6_VERSION S6_VERSION
#     importas SCARLETT_BUILD_GNOME SCARLETT_BUILD_GNOME
#     importas SCARLETT_CONFIG SCARLETT_CONFIG
#     importas SCARLETT_DICT SCARLETT_DICT
#     importas SCARLETT_ENABLE_DBUS SCARLETT_ENABLE_DBUS
#     importas SCARLETT_ENABLE_SSHD SCARLETT_ENABLE_SSHD
#     importas SCARLETT_HMM SCARLETT_HMM
#     importas SCARLETT_LM SCARLETT_LM
#     importas SIGNAL_BUILD_STOP SIGNAL_BUILD_STOP
#     importas SKIP_GOSS_TESTS_GTK_DEPS SKIP_GOSS_TESTS_GTK_DEPS
#     importas SKIP_GOSS_TESTS_JHBUILD SKIP_GOSS_TESTS_JHBUILD
#     importas SKIP_ON_TRAVIS SKIP_ON_TRAVIS
#     importas SKIP_TRAVIS_CI_PYTEST SKIP_TRAVIS_CI_PYTEST
#     importas STOP_AFTER_GOSS_GTK_DEPS STOP_AFTER_GOSS_GTK_DEPS
#     importas STOP_AFTER_GOSS_JHBUILD STOP_AFTER_GOSS_JHBUILD
#     importas STOP_AFTER_TRAVIS_CI_PYTEST STOP_AFTER_TRAVIS_CI_PYTEST
#     importas TERM TERM
#     importas TRAVIS_CI TRAVIS_CI
#     importas TRAVIS_CI_PYTEST TRAVIS_CI_PYTEST
#     importas UID UID
#     importas UNAME UNAME
#     importas USER USER
#     importas USER_HOME USER_HOME
#     importas USER_SSH_PUBKEY USER_SSH_PUBKEY
#     importas VIRT_ROOT VIRT_ROOT
#     importas VIRTUALENV_WRAPPER_SH VIRTUALENV_WRAPPER_SH
#     importas VIRTUALENVWRAPPER_PYTHON VIRTUALENVWRAPPER_PYTHON
#     importas VIRTUALENVWRAPPER_SCRIPT VIRTUALENVWRAPPER_SCRIPT
#     importas VIRTUALENVWRAPPER_VIRTUALENV VIRTUALENVWRAPPER_VIRTUALENV
#     importas WORKON_HOME WORKON_HOME
#     importas XDG_CONFIG_DIRS XDG_CONFIG_DIRS
#     importas XDG_DATA_DIRS XDG_DATA_DIRS
#     importas XDG_RUNTIME_DIR XDG_RUNTIME_DIR
# }

# cd /home/pi/dev/bossjones-github/scarlett_os
# s6-applyuidgid -u 1000 -g 1000 umask 002 make test-travis

# # multisubstitute {
# #   import -D "1000" UID
# #   import -D "1000" GID
# #   import -D "002" UMASK
# # }

# # Set uid to 1000 now
# # NOTE: s6-env -i program
# # -i Invoke utility with exactly the environment specified by the arguments; the inherited environment shall be ignored completely.
# # foreground {
# #     s6-env -i
# #     UID=$UID
# #     GID=$GID
# #     XDG_RUNTIME_DIR=$XDG_RUNTIME_DIR
# #     s6-dumpenv -- /var/run/s6/container_environment
# # }

# # foreground {
# #     s6-echo " [run] s6-envuidgid root mkdir -p ${XDG_RUNTIME_DIR}/env"
# # }

# # # NOTE: These guys are new and might break everything
# # foreground {
# #     s6-envuidgid root mkdir -p ${XDG_RUNTIME_DIR}/env
# # }

# # foreground {
# #     s6-echo " [run] s6-envuidgid pi s6-chown -U ${XDG_RUNTIME_DIR}"
# # }

# # foreground {
# #     s6-envuidgid pi s6-chown -U ${XDG_RUNTIME_DIR}
# # }

# # foreground {
# #     s6-echo " [run] s6-envuidgid pi s6-chown -U ${XDG_RUNTIME_DIR}/env"
# # }

# # foreground {
# #     s6-envuidgid pi s6-chown -U ${XDG_RUNTIME_DIR}/env
# # }

# # foreground {
# #     s6-echo " [run] s6-applyuidgid -u 1000 -g 1000 umask 022 s6-dumpenv -- ${XDG_RUNTIME_DIR}/env"
# # }

# # foreground {
# #     s6-applyuidgid -u 1000 -g 1000 umask 022 s6-dumpenv -- ${XDG_RUNTIME_DIR}/env
# # }

# # foreground {
# #     s6-echo " [run] cd /home/pi/dev/bossjones-github/scarlett_os"
# # }

# # foreground {
# #     cd /home/pi/dev/bossjones-github/scarlett_os
# #     s6-applyuidgid -u 1000 -g 1000 umask 022 make -- test-travis
# #     # s6-envuidgid pi
# #     # s6-setuidgid pi /bin/bash -C 'cd /home/vagrant/dev/bossjones-github/scarlett_os && make test-travis'
# #     # cd /home/vagrant/dev/bossjones-github/scarlett_os
# #     # make test-travis
# #     importas REXIT ?
# #     foreground { s6-echo " [run] make test-travis exited ${REXIT}." }
# #     foreground { s6-echo " [run] make test-travis ran succesfully fool" }
# # }

# # cd /home/pi/dev/bossjones-github/scarlett_os
# # s6-applyuidgid -u 1000 -g 1000 umask 002 make list

# foreground {
#     # NOTE: if program
#     # if [ -X ] [ -n ] [ -t | -x exitcode ] { prog1... } prog2...
#     # if will exit if prog1... exits false. To use it in an execline script that must run prog3... no matter the result of the test, use a foreground wrapper:
#     # foreground { if { prog1... } prog2... } prog3...
#     # -X : treat a crash of prog1 as a non-zero ("false") exit.
#     # -n : negate the test (exit on true, exec into prog2 on false)
#     # -x exitcode : exit exitcode instead of 1 if the test fails.
#     # -t : exit 0 instead of 1 if the test fails. This is equivalent to -x 0.
#     if {
#         if { s6-echo " [run] lets start these goss tests..." }
#         # NOTE: verify that we're the correct user, pi
#         ifelse { s6-test $SKIP_TRAVIS_CI_PYTEST = false }
#         {
#             foreground {
#                 cd /home/pi/dev/bossjones-github/scarlett_os
#                 s6-applyuidgid -u 1000 -g 1000 umask 002 make list
#             }
#         } s6-true
#         # NOTE: UNCOMMENT THIS LINE IF YOU NEED TO TEST THIS LOGIC WITHOUT RUNNING TESTS # foreground { s6-echo " [run] pretend we just ran s6-applyuidgid -u 1000 -g 1000 /usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s" }
#         # foreground { s6-echo " [run] pretend we just ran s6-applyuidgid -u 1000 -g 1000 /usr/local/bin/goss -g /tests/goss.jhbuild.yaml validate --retry-timeout 30s --sleep 1s" }
#         # NOTE: importas program
#         # importas [ -i | -D default ] [ -u ] [ -s ] [ -C | -c ] [ -n ] [ -d delim ] variable envvar prog...
#         # D default : If this option is given and envvar is undefined, substitute default for the value of variable instead of no word. For instance, to substitute the empty word, use -D "".
#         # -i : Insist. If envvar is undefined, importas will not do anything; instead, it will exit 100 with an error message. This has precedence over any -D option.
#         # -u : Unexport. envvar will be removed from the environment after the substitution. importas -u variable envvar is equivalent to importas variable envvar unexport envvar.
#         # Other options are used to control the substitution mechanism.
#         importas REXIT ?
#         foreground { s6-echo " [run] pytest exited ${REXIT}." }
#         foreground { s6-echo " [run] pytest tests ran succesfully fool" }
#     }
# }

# if -t { s6-test $STOP_AFTER_TRAVIS_CI_PYTEST = true }
# foreground { s6-echo " [run] TRAVIS_CI_PYTEST: '${STOP_AFTER_TRAVIS_CI_PYTEST}' ... sending signal build stop" }
# exit ${SIGNAL_BUILD_STOP}
