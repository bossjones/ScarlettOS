# -*- coding: utf-8 -*-

matrix:
  fast_finish: true
  include:
  - python: '3.5'
    env: TOXENV=py35 PYTHON="python3" PACKAGES="python3-gi python3-gi-cairo" DOCKER_COMPOSE_VERSION=1.8.0 TEST_TARGET=default DOCKER_DATA="$HOME/docker_data" DOCKER_VERSION=1.12.0-0~trusty DOCKER_COMPOSE_VERSION=1.8.0
    sudo: required
    dist: trusty
    language: python
    group: edge
  allow_failures:
  - python: '3.5'
    env: TOXENV=typing

services:
  - docker

before_install:
  - travis_retry pip install coveralls
  # List available docker versions.
  - apt-cache madison docker-engine
  # Update Docker. See: https://graysonkoonce.com/managing-docker-and-docker-compose-versions-on-travis-ci/.
  - sudo apt-get -o Dpkg::Options::="--force-confnew" install -y --force-yes docker-engine=${DOCKER_VERSION}
  # Add docker-compose at the version specified in ENV.
  - sudo rm -f /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose --version

cache:
  apt: true
  directories:
  # - "$HOME/.cache/pip"
  # - "$HOME/virtualenv/python3.5.2/lib/python3.5/site-packages"
  - "$HOME/.ccache"
  - "$HOME/jhbuild"
  - "$HOME/gnome"

install:
  - travis_retry pip install coveralls
  - travis_retry pip install coverage
  - travis_retry docker-compose pull
  # set containers as privileged to bypass Travis environment limitations
  - 'sed -i "/build: ./a \ \ privileged: true" docker-compose.yml'
  - travis_retry docker-compose -f docker-compose.yml -f ci/build.yml build

script:
  #- "docker-compose -f docker-compose.test.yml run --rm ${TEST_TARGET}"
  - docker run --privileged -v `pwd`:/home/pi/dev/bossjones-github/scarlett_os -i -t --rm scarlettos_scarlett_master make test-travis

# source: https://github.com/inspirehep/inspire-next/blob/9700274c36074a3e43168bf48b8ba3e3bfa7bcdf/.travis.yml
after_script:
  # Killing via SIGTERM in order to trigger atexit and dump coverage information in WSGI
  - "docker-compose -f docker-compose.yml kill -s SIGTERM"
  - "docker-compose -f docker-compose.yml rm -f"

after_success:
  - _USER=$(ls -lta | awk '{print $3}')
  - _GROUP=$(ls -lta | awk '{print $4}')
  - sudo chown $_USER:$_GROUP -R .
  - mv .coverage .coverage.tests
  - coverage combine
  # Coverage report contains Docker paths. We replace them, so that we can run Coveralls.
  - sed -i 's@\"/home/pi/dev/bossjones-github/scarlett_os/@'"\"$(pwd)/"'@g' .coverage
  - coveralls

deploy:
  distributions: sdist bdist_wheel
  provider: pypi
  user: bossjones
  password:
    secure: RTwOAJzBeEXy1as+a3sutcSjNTfoSg15ep8tHIjOqK0etkThWXNFs0FvWNuChV3zsFhA40sMpAamHvcGXJ717GAYIPstIrgAusLKM7OIUXpUF6kqvZsRQw9RPS4vBmueBoBo+pLY6q9gIP+Bav+fFwWocSyjwHLGcaOVdOF/m2VbWEg3p+SGwVolguSpWBNobLDmwj8yd/qiZ6b2LvTrOVkUENfa8Zk8BSXerZiTe98I2c/KuGqkVird+3LulK0kDU1FENO9v5eh+wZzElgbVSGfy87gkdc5whYIz4oA794Gc0jt+YiP2k0pNPRGAcrAn5MRjCdvWQtmkbxdns/JZOeK59SrhcQ6BRfDNQC97MPEZAz/E3qhiDPxwbhuK+LsdIiRHnazwv4MuUU27TcqwtTWcYijzT0aifiQUW6hLwpmVMx6GJy8dvhh+Ursr52jaAaFVx31NUB96+Wa204LCZV1CFo8vKgqDxTjZBfEK0zepQUh06dRdMJaeAN/dhsupMjnEfVY5GSv+ySKkJJ2r77mngyVO3snMs6x2sdH+PjfMnOEmQUcpnaNCQF01RxxfUz+7TY0JonM4yb7dnc+T402G+PhEDKGi5/O1YCIHwWQcMxhv2rMiYSlUt3ikcxkW8YGhhRvEUX1rGyAtPWBanyJ+KMb3QWv7huKE7Ezc/E=
  on:
    condition: "$TOXENV == py27"
    repo: bossjones/scarlett_os
    tags: true

notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: arS7e7IDG80ukrrjy4fVfNDh5Yqrz4mxmduWqJU2zHzwxL0QkJWnhncWBpTgXr06MVgWYwq/YnoCGZ+wcWHkYzsqDHWtFI0JguZuJcFAWV5l7PWOxcUUh731hipRcgkZIH03pqnfZTbN3kkNTvFcTL9NG92ZOYd/ZSQeCnNPF9T2PUjn5LnPNwOxJSVAdmvz7CoLJWIR6vF9ojoxZdMj1RhV4b1C9orP3pBh3V3sVc5ExX6cUePXJtkvb51fXwdCsGNA22xZrDfbxCoOXfMmgDuN/7W/DVPPyaZCInYQl2B/oLF+3TOqUZ8STM3BPDIBjxgPRBdULIqeaQJNNJ9rfQ6h+YhvCWDmZD5ugdTQkGCSX2hR4TGMnS9v/nu5KKSalQEkNOfcqZUSTRVHKL800arEwja2avRGu9KBlijg79r/k2EILb7sPfleeS0+eLKIYTBVyQvuiqo31NcZ4Yun9ykQlTJW0n1NiVrLRVHbCIScrHwyH8pI4ts6PbwtUO8HWWDXEUSZRipc14ckZBzqB6ozAAwtF4fStnHC5rkd1sRreZalLKsZxaVpsX0mspZfSLfz6eV34vnDs9Xv0+tPuW0X0P1/FZIykvjDrmoM8s5TD1xzES9zRslhWxK2yv0a5OaryWvicQKcCwg8zwdiCTAwq1wBNkYzrtTnTN9QnRA=
